name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Lint with ruff
      run: |
        ruff check .
    
    - name: Type check with mypy
      run: |
        mypy pixell
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=pixell --cov-report=term-missing
    
    - name: Test CLI commands
      run: |
        pixell --version
        pixell --help
    
    - name: Test building a sample agent
      run: |
        # Create a test agent
        mkdir -p test-agent/src
        echo 'version: "1.0"' > test-agent/agent.yaml
        echo 'name: "test-agent"' >> test-agent/agent.yaml
        echo 'display_name: "Test Agent"' >> test-agent/agent.yaml
        echo 'description: "Test"' >> test-agent/agent.yaml
        echo 'author: "Test"' >> test-agent/agent.yaml
        echo 'license: "MIT"' >> test-agent/agent.yaml
        echo 'entrypoint: "src.main:main"' >> test-agent/agent.yaml
        echo 'runtime: "python3.11"' >> test-agent/agent.yaml
        echo 'metadata:' >> test-agent/agent.yaml
        echo '  version: "0.1.0"' >> test-agent/agent.yaml
        echo 'def main(): pass' > test-agent/src/main.py
        echo '' > test-agent/src/__init__.py
        echo 'API_KEY=test-key' > test-agent/.env

        # Test commands
        pixell validate -p test-agent
        pixell build -p test-agent